on:
  pull_request:
    branches:
      - staging
  workflow_dispatch:

env:
  DOCKER_IMAGE: 'registry.gitlab.eox.at/esa/vires_vre_ops/vre-swarm-notebook'
  TAG: '1.0.1'

jobs:
  book:
    name: Build Jupyter Book (Staging)
    runs-on: ubuntu-latest
    steps:
      - name: Pull docker image
        run: |
          echo ${{ secrets.EOX_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.EOX_REGISTRY_USER }} --password-stdin registry.gitlab.eox.at
          docker pull ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
      - uses: actions/checkout@v4
      - name: Add bookbuilder environment to container
        run: |
          docker run --name temp-container -v $GITHUB_WORKSPACE:/home/jovyan -u root ${{ env.DOCKER_IMAGE }}:${{ env.TAG }} \
            bash -c \
              '
              mamba run --no-capture-output -n base python -m ipykernel install --user --name base && \
              mamba create --name bookbuilder --file .bookbuilder/conda-linux-64.lock
              '
          docker commit temp-container ${{ env.DOCKER_IMAGE }}:customized
      - name: Execute notebooks using nbmake
        run: |
          docker run -v $GITHUB_WORKSPACE:/home/jovyan -u root \
            -e VIRES_TOKEN=${{ secrets.VIRES_TOKEN }} \
            -e VIRES_TOKEN_STAGING=${{ secrets.VIRES_TOKEN_STAGING }} \
            -e VIRES_TOKEN_STAGING_DISC=${{ secrets.VIRES_TOKEN_STAGINGDISC}} \
            ${{ env.DOCKER_IMAGE }}:customized \
            bash -c \
              '
              export CDF_LIB=/opt/conda/lib && \
              pip install --upgrade 'git+https://github.com/ESA-VirES/VirES-Python-Client@staging#egg=viresclient' && \
              viresclient set_token https://vires.services/ows $VIRES_TOKEN && \
              viresclient set_token https://staging.vires.services/ows $VIRES_TOKEN_STAGING && \
              viresclient set_token https://staging.viresdisc.vires.services/ows $VIRES_TOKEN_STAGING_DISC && \
              viresclient set_default_server https://vires.services/ows && \
              mamba run -n bookbuilder pytest --numprocesses 2 --nbmake --overwrite --nbmake-kernel=base \
                notebooks/*.ipynb \
                --deselect=notebooks/04c1_Geomag-Ground-Data-FTP.ipynb
              '
      - name: Build book
        if: always()
        run: |
          docker run -v $GITHUB_WORKSPACE:/home/jovyan -u root ${{ env.DOCKER_IMAGE }}:customized \
            bash -c \
              '
              mamba run -n bookbuilder jupyter-book build --config _config-ci-staging.yml .
              '
      - name: Deploy preview to Netlify
        if: always()
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './_build/html'
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions (staging)"
          github-deployment-environment: staging
          github-deployment-description: "jupyter-book staging preview"
          alias: preview-staging
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_API_ID }}
